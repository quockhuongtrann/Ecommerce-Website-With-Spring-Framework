package com.shoptqk.admin.report;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.shoptqk.admin.order.OrderRepository;
import com.shoptqk.common.entity.order.Order;

@Service
public class MasterOrderReportService {
	@Autowired private OrderRepository orderRepository;
	private DateFormat dateFormatter;
	
	public List<ReportItem> getReportDataLast7Days() throws ParseException {
		System.out.println("getReportDataLast7Days...");
		return getReportDataLastXDays(7);
	}
	
	private List<ReportItem> getReportDataLastXDays(int days) throws ParseException {
		dateFormatter = new SimpleDateFormat("yyyy-MM-dd"); 
		Date endTime = formatter.parse("2021-10-15");
		Date startTime = formatter.parse("2021-10-09");
//		Date endTime = new Date();
//		Calendar calendar = Calendar.getInstance();
//		calendar.add(calendar.DAY_OF_MONTH, -(days - 1));
//		Date startTime = calendar.getTime();
		
		System.out.println("Start time: " + startTime);
		System.out.println("End time: " + endTime);
		return getReportDataByDateRange(startTime, endTime);
	}
	
	private List<ReportItem> getReportDataByDateRange(Date startTime, Date endTime) {
		List<Order> listOrders = orderRepository.findByOrderTimeBetween(startTime, endTime);
		printRawData(listOrders);
		
		List<ReportItem> listReportItems = createReportData(startTime, endTime);
		printReportData(listReportItems);
		return null;
	}

	private void printReportData(List<ReportItem> listReportItems) {
		listReportItems.forEach(item -> {
			System.out.printf("%s \n", item.getIdentifier());
		});
	}

	private List<ReportItem> createReportData(Date startTime, Date endTime) {
		List<ReportItem> listReportItems = new ArrayList<>();
		Calendar startDate = Calendar.getInstance();
		startDate.setTime(startTime);
		
		Calendar endDate = Calendar.getInstance();
		endDate.setTime(endTime);
		
		Date currentDate = startDate.getTime();
		String dateString = dateFormatter.format(currentDate);
		listReportItems.add(new ReportItem(dateString));
		
		do {
			startDate.add(Calendar.DAY_OF_MONTH, 1);
			currentDate = startDate.getTime();
			System.out.println(currentDate);
			// dateString = dateFormatter.format(currentDate);
			listReportItems.add(new ReportItem(dateString));
		} while (startDate.before(endDate));
		
		return listReportItems;
		
	}

	private void printRawData(List<Order> listOrders) {
		listOrders.forEach(order -> {
			System.out.printf("%-3d | %s | %10.2f | %10.2f \n",
					order.getId(), order.getOrderTime(), order.getTotal(), order.getProductCost());
		});
		
	}
}
